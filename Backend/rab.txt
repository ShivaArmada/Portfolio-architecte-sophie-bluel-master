// function initLogin() {
    let conect_Btn = document.getElementById("input-log-submit");
    conect_Btn.addEventListener("click", () => {
        
        // URL à utiliser pour la requête Post/GET user-e-mdp
    const url = 'http://localhost:5678/api/users/login';

    // Options de la requête Post
    const options = {
        method: 'POST',
        headers: {
            'Accept': 'application/json'
        }


    };




      // Options de la requête GET
      const options = {
          method: 'GET',
          headers: {
              'Accept': 'application/json'
          }


      };
       
    })
}



//code brut login =

   // Cette fonction permet d'initialiser le login en appuyant sur le bouton se connecter


   const axios = require('axios');
   const cookie = require('cookie');
   const url = 'http://localhost:5678/api/users/login';

   let email = 'sophie.bluel@test.tld'
    let password = 'S0phie'

// Define the function to send a POST request to the login URL
async function login(email, password) {
  try {
    // Make the POST request to the login URL with the credentials
    const response = await axios.post('http://localhost:5678/api/users/login', {
      email: email,
      password: password
    });

    // Assuming successful login, return the response data
    return response.data;
  } catch (error) {
    // Handle any errors that occur during the login process
    console.error('Error logging in:', error.message);
    throw error;
  }
}



// Usage example
const loggedInUser = await login('email', 'password');
console.log('Logged in user:', loggedInUser);

const loginData = {
    email: 'your_email',
    password: 'your_password'
  };
  
  fetch('http://localhost:5678/api/users/login', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(loginData)
  })
    .then(response => {
      // Extract the cookies from the response headers
      const cookies = response.headers.get('Set-Cookie');
  
      // Store the cookies in a variable or any storage of your choice
      // For example, you can store them in localStorage
      sessionStorage.json.setItem('sessionCookies', cookies);
    })
    .catch(error => {
      console.error('Error:', error);
    });

loginData = {
  email: email,
  password: password
};

// Send POST request to login
fetch(url, {
  method: "POST",
  headers: {
    "Content-Type": "application/json"
  },
  body: JSON.stringify(loginData)
})
  .then(response => {
    if (response.ok) {
      // Login successful
      // Proceed to get the desired webpage
      return response.text();
    } else {
      throw new Error("Login failed");
    }
  })
  .then(content => {
    // Content of the login page
    console.log(content);
  })
  .catch(error => {
    console.error("Error logging in:", error);
  });

  const desiredUrl = "../frontend/connected.html";

// Send GET request to desired page
fetch(desiredUrl)
  .then(response => {
    if (response.ok) {
      // Request successful
      return response.text();
    } else {
      throw new Error("Failed to retrieve desired page");
    }
  })
  .then(content => {
    // Content of the desired webpage
    console.log(content);
  })
  .catch(error => {
    console.error("Error retrieving desired page:", error);
  });


//error handling
  function handleRequest(url, payload, headers) {
    try {
      // Perform HTTP request here using the provided parameters
      // ...
      // Return the result of the request if successful
      return response;
    } catch (error) {
      // Handle any errors or exceptions that occur during the request
      console.error('An error occurred:', error);
      // Return an error message to indicate the failure
      return 'Request failed: ' + error.message;
    }
  }

  function extractAndStoreSessionCookies(response) {
    const cookies = response.headers.get('Set-Cookie');
  
    if (cookies) {
      // Store the cookies in a variable or any storage of your choice
      // For example, you can store them in localStorage
      sessionStorage.json.setItem('sessionCookies', cookies);
      console.log('Session cookies stored successfully');
    } else {
      console.log('No session cookies found in the response headers');
    }
  }








  
   
   



